/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package gui.fan;
import classes.Fan;
import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import gui.login.LoginPage;
import gui.login.SignupPage;
import java.awt.HeadlessException;
import java.time.format.DateTimeFormatter;
import javax.swing.JOptionPane;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.text.BadLocationException;

/**
 *
 * @author Ljubomir
 */
public class FanProfilePage extends javax.swing.JFrame {
    
    private static final String emailPattern = "^[\\w.-]+@[\\w.-]+\\.[a-zA-Z]{2,}$";
    private static final String phonePattern = "^\\+?[0-9]{7,15}$";

    private boolean changeMode = false;
    
    Fan fan;
    
    /**
     * Creates new form FanProfilePage
     */
    public FanProfilePage(Fan fan) {
        initComponents();
        setVisible(true);
        setResizable(false);
        setLocationRelativeTo(null);
        cancelChangeProfile.setVisible(false);
        changeProfile.setVisible(false);
        this.fan = fan;
        String idStr = Integer.toString(fan.getIdNavijac());
        idTxtView.setText(idStr);
        nameTxtView.setText(fan.getName());
        surnameTxtView.setText(fan.getSurname());
        usernameTxtView.setText(this.fan.getUsername());
        emailTxtView.setText(fan.getEmail());
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd");
        String birthday = fan.getBirthday().format(formatter);
        birhdayTxtView.setText(birthday);
        phoneTxtView.setText(fan.getPhone());
        addListener();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        idTxtView = new javax.swing.JTextField();
        nameTxtView = new javax.swing.JTextField();
        surnameTxtView = new javax.swing.JTextField();
        usernameTxtView = new javax.swing.JTextField();
        emailTxtView = new javax.swing.JTextField();
        birhdayTxtView = new javax.swing.JTextField();
        phoneTxtView = new javax.swing.JTextField();
        changeProfileBtn = new javax.swing.JButton();
        btnGoBack = new javax.swing.JButton();
        changeProfile = new javax.swing.JButton();
        cancelChangeProfile = new javax.swing.JButton();
        usernameChecker = new javax.swing.JTextField();
        emailCheckerField = new javax.swing.JTextField();
        phoneCheckerField = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Sport tickets shop | My profile");
        setMinimumSize(new java.awt.Dimension(396, 485));
        setPreferredSize(new java.awt.Dimension(450, 485));
        getContentPane().setLayout(null);

        jTextField1.setEditable(false);
        jTextField1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jTextField1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField1.setText("My profile");
        jTextField1.setBorder(null);
        getContentPane().add(jTextField1);
        jTextField1.setBounds(170, 30, 133, 49);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText("Id:");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(60, 105, 73, 31);

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("Name:");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(60, 142, 73, 31);

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("Surname:");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(60, 179, 73, 31);

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("Username:");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(60, 216, 73, 31);

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("Email:");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(60, 253, 73, 31);

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel6.setText("Birthday:");
        getContentPane().add(jLabel6);
        jLabel6.setBounds(60, 290, 73, 31);

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel7.setText("Phone:");
        getContentPane().add(jLabel7);
        jLabel7.setBounds(60, 327, 73, 31);

        idTxtView.setEditable(false);
        idTxtView.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        getContentPane().add(idTxtView);
        idTxtView.setBounds(139, 107, 190, 26);

        nameTxtView.setEditable(false);
        nameTxtView.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        getContentPane().add(nameTxtView);
        nameTxtView.setBounds(139, 144, 190, 26);

        surnameTxtView.setEditable(false);
        surnameTxtView.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        getContentPane().add(surnameTxtView);
        surnameTxtView.setBounds(139, 181, 190, 26);

        usernameTxtView.setEditable(false);
        usernameTxtView.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        getContentPane().add(usernameTxtView);
        usernameTxtView.setBounds(139, 218, 190, 26);

        emailTxtView.setEditable(false);
        emailTxtView.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        getContentPane().add(emailTxtView);
        emailTxtView.setBounds(139, 255, 190, 26);

        birhdayTxtView.setEditable(false);
        birhdayTxtView.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        getContentPane().add(birhdayTxtView);
        birhdayTxtView.setBounds(139, 292, 190, 26);

        phoneTxtView.setEditable(false);
        phoneTxtView.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        getContentPane().add(phoneTxtView);
        phoneTxtView.setBounds(139, 329, 190, 26);

        changeProfileBtn.setText("Change profile");
        changeProfileBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changeProfileBtnActionPerformed(evt);
            }
        });
        getContentPane().add(changeProfileBtn);
        changeProfileBtn.setBounds(150, 390, 150, 37);

        btnGoBack.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnGoBack.setText("<");
        btnGoBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGoBackActionPerformed(evt);
            }
        });
        getContentPane().add(btnGoBack);
        btnGoBack.setBounds(29, 32, 47, 47);

        changeProfile.setText("Change");
        changeProfile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changeProfileActionPerformed(evt);
            }
        });
        getContentPane().add(changeProfile);
        changeProfile.setBounds(270, 390, 100, 37);

        cancelChangeProfile.setText("Cancel");
        cancelChangeProfile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelChangeProfileActionPerformed(evt);
            }
        });
        getContentPane().add(cancelChangeProfile);
        cancelChangeProfile.setBounds(90, 390, 100, 37);

        usernameChecker.setEditable(false);
        usernameChecker.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        usernameChecker.setForeground(new java.awt.Color(187, 0, 0));
        usernameChecker.setBorder(null);
        getContentPane().add(usernameChecker);
        usernameChecker.setBounds(340, 220, 80, 20);

        emailCheckerField.setEditable(false);
        emailCheckerField.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        emailCheckerField.setForeground(new java.awt.Color(202, 34, 34));
        emailCheckerField.setBorder(null);
        emailCheckerField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                emailCheckerFieldActionPerformed(evt);
            }
        });
        getContentPane().add(emailCheckerField);
        emailCheckerField.setBounds(340, 250, 80, 30);

        phoneCheckerField.setEditable(false);
        phoneCheckerField.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        phoneCheckerField.setForeground(new java.awt.Color(202, 34, 34));
        phoneCheckerField.setBorder(null);
        phoneCheckerField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                phoneCheckerFieldActionPerformed(evt);
            }
        });
        getContentPane().add(phoneCheckerField);
        phoneCheckerField.setBounds(340, 330, 80, 30);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void changeProfileBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changeProfileBtnActionPerformed
        nameTxtView.setEditable(true);
        surnameTxtView.setEditable(true);
        usernameTxtView.setEditable(true);
        emailTxtView.setEditable(true);
        phoneTxtView.setEditable(true);
        changeProfileBtn.setVisible(false);
        cancelChangeProfile.setVisible(true);
        changeProfile.setVisible(true);
        changeMode = true;
    }//GEN-LAST:event_changeProfileBtnActionPerformed
    
    private void btnGoBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGoBackActionPerformed
        if(changeMode && madeChanges()){
            AYSPopup popUpQuestion = new AYSPopup(this, true, fan);
        }else{
            FanHomePage fhp = new FanHomePage(fan);
            dispose();
        }
    }//GEN-LAST:event_btnGoBackActionPerformed

    private void changeProfileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changeProfileActionPerformed
        String newName = nameTxtView.getText();
        String newSurname = surnameTxtView.getText();
        String newUsername = usernameTxtView.getText();
        String newEmail = emailTxtView.getText();
        String newPhone = phoneTxtView.getText();
        
        if(inputsOK()){
            updateDatasInBase(newName, newSurname, newUsername, newEmail, newPhone);
        
            nameTxtView.setEditable(false);
            surnameTxtView.setEditable(false);
            usernameTxtView.setEditable(false);
            emailTxtView.setEditable(false);
            phoneTxtView.setEditable(false);
            changeProfileBtn.setVisible(true);
            cancelChangeProfile.setVisible(false);
            changeProfile.setVisible(false);
            changeMode = false;
            
            fan.setName(newName);
            fan.setSurname(newSurname);
            fan.setUsername(newUsername);
            fan.setEmail(newEmail);
            fan.setPhone(newPhone);
            
            JOptionPane.showMessageDialog(rootPane, "User updated", "Updated successfully", JOptionPane.INFORMATION_MESSAGE);
            
        }else{
            JOptionPane.showMessageDialog(rootPane, "Inputs error", "Error", JOptionPane.ERROR_MESSAGE);
        }
        
        
    }//GEN-LAST:event_changeProfileActionPerformed

    private void cancelChangeProfileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelChangeProfileActionPerformed
        FanHomePage fhp = new FanHomePage(fan);
        dispose();
    }//GEN-LAST:event_cancelChangeProfileActionPerformed

    private void emailCheckerFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_emailCheckerFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_emailCheckerFieldActionPerformed

    private void phoneCheckerFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_phoneCheckerFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_phoneCheckerFieldActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField birhdayTxtView;
    private javax.swing.JButton btnGoBack;
    private javax.swing.JButton cancelChangeProfile;
    private javax.swing.JButton changeProfile;
    private javax.swing.JButton changeProfileBtn;
    private javax.swing.JTextField emailCheckerField;
    private javax.swing.JTextField emailTxtView;
    private javax.swing.JTextField idTxtView;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField nameTxtView;
    private javax.swing.JTextField phoneCheckerField;
    private javax.swing.JTextField phoneTxtView;
    private javax.swing.JTextField surnameTxtView;
    private javax.swing.JTextField usernameChecker;
    private javax.swing.JTextField usernameTxtView;
    // End of variables declaration//GEN-END:variables

    private void updateDatasInBase(String newName, String newSurname, String newUsername, String newEmail, String newPhone) {
        Connection con = null;
        
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/prosoft", "root", "root");
            System.out.println("Uspesno povezano sa bazom");
            
            String sql = "UPDATE navijac SET name = ?, surname = ?, username = ?, email = ?, phone = ? WHERE idNavijac = ?";
            PreparedStatement ps = con.prepareStatement(sql);

            ps.setString(1, newName);
            ps.setString(2, newSurname);
            ps.setString(3, newUsername);
            ps.setString(4, newEmail);
            ps.setString(5, newPhone);
            ps.setInt(6, fan.getIdNavijac());
        
            ps.executeUpdate();  
            
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(LoginPage.class.getName()).log(Level.SEVERE, null, ex);
        }finally {
            if (con != null) {
                try {
                    con.close();
                } catch (SQLException ex) {
                    ex.printStackTrace();
                }
            }
        }
    }
    
    private void addListener(){
        usernameTxtView.getDocument().addDocumentListener(new DocumentListener(){
            @Override
            public void insertUpdate(DocumentEvent e) {
                usernameValidation(e);
            }
            
            private void usernameValidation(DocumentEvent e){
                try {
                    String usernameInput = e.getDocument().getText(0, e.getDocument().getLength());
                    if(userWithThatUsernameExists(usernameInput)){
                        //System.out.println("Treba da se ispise");
                        usernameChecker.setText("Username exists");
                    }else if(usernameInput.length() < 5){
                        usernameChecker.setText("min 5 chars");
                    }else{
                        usernameChecker.setText("");
                    }
                    
                    
                } catch (BadLocationException ex) {
                    Logger.getLogger(SignupPage.class.getName()).log(Level.SEVERE, null, ex);
                }
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                usernameValidation(e);
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
            }
            
        });
        
        phoneTxtView.getDocument().addDocumentListener(new DocumentListener(){
            @Override
            public void insertUpdate(DocumentEvent e) {
                phoneValidate(e);
            }
            
            private void phoneValidate(DocumentEvent e){
                try {
                    String phoneInput = e.getDocument().getText(0, e.getDocument().getLength());
                    if(!phoneInput.matches(phonePattern)){
                        phoneCheckerField.setText("invalid format");
                    }else{
                        phoneCheckerField.setText("");
                    }
                    
                } catch (BadLocationException ex) {
                    Logger.getLogger(SignupPage.class.getName()).log(Level.SEVERE, null, ex);
                }
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                phoneValidate(e);
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
            }
            
        });
        
        emailTxtView.getDocument().addDocumentListener(new DocumentListener(){
            @Override
            public void insertUpdate(DocumentEvent e) {
                //System.out.println("Insert update");
                emailValidate(e);
            }
            
            private void emailValidate(DocumentEvent e){
                try {
                    String emailInput = e.getDocument().getText(0, e.getDocument().getLength());
                    if(!emailInput.matches(emailPattern)){
                        emailCheckerField.setText("invalid format");
                    }else{
                        emailCheckerField.setText("");
                    }
                } catch (BadLocationException ex) {
                    Logger.getLogger(SignupPage.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            
            @Override
            public void removeUpdate(DocumentEvent e) {
                //System.out.println("Remove update");
                emailValidate(e);
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                //System.out.println("Change update");
            }
            
        });
    }
        
    public boolean userWithThatUsernameExists(String usernameInput) {
        Connection con = null;
	PreparedStatement preparedStatement = null;
        ResultSet resultSet = null;

	try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/prosoft", "root", "root");
            System.out.println("uspesno povezano sa bazom");

            String query = "select username from navijac";
            preparedStatement = con.prepareStatement(query);
            resultSet = preparedStatement.executeQuery();
            while (resultSet.next()) {
                String username = resultSet.getString("username");
                if (usernameInput.equals(username) && !usernameInput.equals(fan.getUsername())) {
                    System.out.println("Poklapa se");
                    return true;
                }
            }
            return false;
	} catch (HeadlessException | ClassNotFoundException | SQLException e) {
            System.out.println(e);
	} finally {
            try {
		if (preparedStatement != null)
                    preparedStatement.close();
		if (con != null)
                    con.close();
		} catch (SQLException e) {
                    e.printStackTrace();
		}
	}
        return false;
    }
    
    private boolean inputsOK(){
        
        String email = emailTxtView.getText();
        String usernameInput = usernameTxtView.getText();
        String name = nameTxtView.getText();
        String surname = surnameTxtView.getText();
        String phone = phoneTxtView.getText();
        
        if(phone.matches(phonePattern) && email.matches(emailPattern) && !userWithThatUsernameExists(usernameInput) && !name.equals("") && !surname.equals("") && !usernameInput.equals("")) return true;
        return false;
    }
    
    private boolean madeChanges(){
        if(nameTxtView.getText().equals(fan.getName()) && surnameTxtView.getText().equals(fan.getSurname()) &&
                usernameTxtView.getText().equals(fan.getUsername()) && emailTxtView.getText().equals(fan.getEmail())
                && phoneTxtView.getText().equals(fan.getPhone())) return false;
        return true;
    }
}

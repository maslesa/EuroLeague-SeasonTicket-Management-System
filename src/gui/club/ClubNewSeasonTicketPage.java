/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package gui.club;

import controller.Controller;
import models.*;
import java.util.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.text.BadLocationException;

/**
 *
 * @author Ljubomir
 */
public class ClubNewSeasonTicketPage extends javax.swing.JFrame {

    Club club = new Club(0, "", "", "", "", "");
    Controller k = Controller.getInstance();
    List<Card> cards = new ArrayList<>();
    List<Season> seasons = new ArrayList<>();
    List<CardType> cardtypes = new ArrayList<>();

    /**
     * Creates new form ClubNewSeasonTicketPage
     */
    public ClubNewSeasonTicketPage(Club club) {
        initComponents();
        this.club = club;
        seasons = k.getAllSeasons();
        cardtypes = k.getAllCardTypes();
        cards = k.getAllCardsNew(club);
        for (Season s : seasons) {
            jcbSeason.addItem(s);
        }
        for (CardType ct : cardtypes) {
            jcbCardType.addItem(ct);
        }
        setLocationRelativeTo(null);
        jbtnDefine.setEnabled(false);
        addListener();
        setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        welcomeMessage = new javax.swing.JTextField();
        jcbSeason = new javax.swing.JComboBox<>();
        jcbCardType = new javax.swing.JComboBox<>();
        txtVacances = new javax.swing.JTextField();
        txtPrice = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jbtnDefine = new javax.swing.JButton();
        btnGoBack = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Sport tickets shop | Define new season ticket");
        setResizable(false);

        welcomeMessage.setEditable(false);
        welcomeMessage.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        welcomeMessage.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        welcomeMessage.setText("Define new season ticket");
        welcomeMessage.setBorder(null);
        welcomeMessage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                welcomeMessageActionPerformed(evt);
            }
        });

        txtVacances.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        txtPrice.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText("Season:");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("Card type:");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("Vacances:");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("Price:");

        jbtnDefine.setText("Define new season ticket");
        jbtnDefine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnDefineActionPerformed(evt);
            }
        });

        btnGoBack.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnGoBack.setText("<");
        btnGoBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGoBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(btnGoBack, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)
                        .addComponent(welcomeMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 369, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(117, 117, 117)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jcbSeason, 0, 244, Short.MAX_VALUE)
                            .addComponent(jcbCardType, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtVacances)
                            .addComponent(txtPrice, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addContainerGap(108, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jbtnDefine, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(165, 165, 165))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(welcomeMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnGoBack, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jcbSeason, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jcbCardType, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtVacances, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addComponent(jbtnDefine, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(37, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void welcomeMessageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_welcomeMessageActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_welcomeMessageActionPerformed

    private void btnGoBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGoBackActionPerformed
        ClubHomePage chp = new ClubHomePage(club);
        dispose();
    }//GEN-LAST:event_btnGoBackActionPerformed

    private void jbtnDefineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnDefineActionPerformed
        Season season = (Season) jcbSeason.getSelectedItem();
        CardType cardType = (CardType) jcbCardType.getSelectedItem();
        int vacances = Integer.parseInt(txtVacances.getText());
        int price = Integer.parseInt(txtPrice.getText());
        Card newCard = new Card(price, vacances, season.getIdSezona(), club.getIdKlub(), cardType.getIdCardType());
        cards = k.getAllCardsNew(club);
        if (cardAlreadyExists(cards, newCard)) {
            int choice = JOptionPane.showConfirmDialog(rootPane, "You have already defined that card! Do you want update it?", "Card already exists", JOptionPane.YES_NO_OPTION);
            if(choice == JOptionPane.YES_NO_OPTION){
                ClubUpdateCard cuc = new ClubUpdateCard(club, season, cardType, newCard);
                dispose();
            }
        } else {

            if (k.insertNewCard(newCard)) {
                JOptionPane.showMessageDialog(rootPane, "New card inserted.", "Successfull", JOptionPane.INFORMATION_MESSAGE);
                txtPrice.setText("");
                txtVacances.setText("");
            } else {
                JOptionPane.showMessageDialog(rootPane, "Error in difining new card!", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_jbtnDefineActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnGoBack;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JButton jbtnDefine;
    private javax.swing.JComboBox<CardType> jcbCardType;
    private javax.swing.JComboBox<Season> jcbSeason;
    private javax.swing.JTextField txtPrice;
    private javax.swing.JTextField txtVacances;
    private javax.swing.JTextField welcomeMessage;
    // End of variables declaration//GEN-END:variables

    private boolean cardAlreadyExists(List<Card> cards, Card newCard) {
        for (int i = 0; i < cards.size(); i++) {
            if (cards.get(i).getIdSeason() == newCard.getIdSeason() && cards.get(i).getIdCardType() == newCard.getIdCardType()) {
                return true;
            }
        }
        return false;
    }

    private void addListener() {
        txtVacances.getDocument().addDocumentListener(new DocumentListener() {

            private boolean vacanceValidation(DocumentEvent e) {
                try {
                    String vacanceInput = e.getDocument().getText(0, e.getDocument().getLength());
                    if(!inputsOK()) return false;
                    for (char c : vacanceInput.toCharArray()) {
                        if (!Character.isDigit(c)) {
                            return false;
                        }
                    }
                    return true;
                } catch (BadLocationException ex) {
                    Logger.getLogger(ClubNewSeasonTicketPage.class.getName()).log(Level.SEVERE, null, ex);
                }
                return true;
            }

            @Override
            public void insertUpdate(DocumentEvent e) {
                jbtnDefine.setEnabled(vacanceValidation(e));
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                jbtnDefine.setEnabled(vacanceValidation(e));
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
            }

        });
        
        txtPrice.getDocument().addDocumentListener(new DocumentListener(){
            
            private boolean priceValidation(DocumentEvent e){
                try {
                    String priceInput = e.getDocument().getText(0, e.getDocument().getLength());
                    if(!inputsOK()) return false;
                    for (char c : priceInput.toCharArray()) {
                        if (!Character.isDigit(c)) {
                            return false;
                        }
                    }
                    return true;
                } catch (BadLocationException ex) {
                    Logger.getLogger(ClubNewSeasonTicketPage.class.getName()).log(Level.SEVERE, null, ex);
                }
                return true;
            }
            
            @Override
            public void insertUpdate(DocumentEvent e) {
                jbtnDefine.setEnabled(priceValidation(e));
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                jbtnDefine.setEnabled(priceValidation(e));
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
            }
            
        });
        
    }
    
    private boolean inputsOK(){
        String vacances = txtVacances.getText();
        String price = txtPrice.getText();
        if(vacances.equals("") || price.equals("")) return false;
        return true;
    }

}

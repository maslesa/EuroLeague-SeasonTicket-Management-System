/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package gui.club;

import controller.Controller;
import java.time.Duration;
import java.time.LocalDateTime;
import model.Club;
import java.util.*;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import jdk.jfr.FlightRecorder;
import model.Match;

/**
 *
 * @author Ljubomir
 */
public class ClubAllMatches extends javax.swing.JFrame {
    
    Club club;
    List<Match> matches = new ArrayList<>();
    Match selectedMatch;
    Controller k = Controller.getInstance();
    TableModelAllMatches tmam;
    /**
     * Creates new form ClubAllMatches
     */
    public ClubAllMatches(Club club) {
        initComponents();
        this.club = club;
        List<Match> matches = new ArrayList<>();
        matches = k.getAllMatches(club);
        tmam = new TableModelAllMatches(matches);
        jTableAllMatches.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        jTableAllMatches.setModel(tmam);
        jbtnMatchDetails.setVisible(false);
        jbtnMatchDelete.setVisible(false);
        jbtnMatchUpdate.setVisible(false);
        addListener();
        setLocationRelativeTo(null);
        setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnGoBack = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableAllMatches = new javax.swing.JTable();
        jbtnMatchDetails = new javax.swing.JButton();
        jbtnMatchDelete = new javax.swing.JButton();
        jbtnMatchUpdate = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Sport tickets shop | All matches");
        setMinimumSize(new java.awt.Dimension(970, 665));
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnGoBack.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnGoBack.setText("<");
        btnGoBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGoBackActionPerformed(evt);
            }
        });
        getContentPane().add(btnGoBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(28, 28, 47, 47));

        jTextField1.setEditable(false);
        jTextField1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jTextField1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField1.setText("All matches");
        jTextField1.setBorder(null);
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        getContentPane().add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(352, 25, 274, 49));

        jTableAllMatches.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTableAllMatches);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(91, 114, 789, 400));

        jbtnMatchDetails.setText("View match details");
        jbtnMatchDetails.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnMatchDetailsActionPerformed(evt);
            }
        });
        getContentPane().add(jbtnMatchDetails, new org.netbeans.lib.awtextra.AbsoluteConstraints(383, 546, 217, 45));

        jbtnMatchDelete.setText("Delete match");
        jbtnMatchDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnMatchDeleteActionPerformed(evt);
            }
        });
        getContentPane().add(jbtnMatchDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(91, 546, 217, 45));

        jbtnMatchUpdate.setText("Update match");
        jbtnMatchUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnMatchUpdateActionPerformed(evt);
            }
        });
        getContentPane().add(jbtnMatchUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(663, 546, 217, 45));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnGoBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGoBackActionPerformed
        ClubHomePage chp = new ClubHomePage(club);
        dispose();
    }//GEN-LAST:event_btnGoBackActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jbtnMatchDetailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnMatchDetailsActionPerformed
        ClubMatchDetails cmd = new ClubMatchDetails(club, selectedMatch);
        dispose();
    }//GEN-LAST:event_jbtnMatchDetailsActionPerformed

    private void jbtnMatchDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnMatchDeleteActionPerformed
        int choice = JOptionPane.showConfirmDialog(rootPane, "Are you sure you want delete this match?", "Delete match", JOptionPane.YES_NO_OPTION);
        if(choice == JOptionPane.YES_OPTION){
            if(k.deleteSelectedMatch(selectedMatch)){
                refreshTable();
                JOptionPane.showMessageDialog(rootPane, "Match has been deleted successfuly", "Match deleted", JOptionPane.INFORMATION_MESSAGE);
                jbtnMatchDelete.setVisible(false);
                jbtnMatchDetails.setVisible(false);
                jbtnMatchUpdate.setVisible(false);
            }
        }
    }//GEN-LAST:event_jbtnMatchDeleteActionPerformed

    private void jbtnMatchUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnMatchUpdateActionPerformed
        ClubInsertNewMatch cinm = new ClubInsertNewMatch(club, selectedMatch);
        dispose();
    }//GEN-LAST:event_jbtnMatchUpdateActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnGoBack;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableAllMatches;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JButton jbtnMatchDelete;
    private javax.swing.JButton jbtnMatchDetails;
    private javax.swing.JButton jbtnMatchUpdate;
    // End of variables declaration//GEN-END:variables

    private void addListener() {
        jTableAllMatches.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                if (!e.getValueIsAdjusting() && jTableAllMatches.getSelectedRowCount() == 1) {
                    jbtnMatchDetails.setVisible(true);
                    int rowIndex = jTableAllMatches.getSelectedRow();
                    selectedMatch = tmam.getMatch(rowIndex);
                    if(!isFinished(selectedMatch) && selectedMatch.getHostName().equals(club.getFullName())){
                        jbtnMatchDelete.setVisible(true);
                        jbtnMatchUpdate.setVisible(true);
                    }else{
                        jbtnMatchDelete.setVisible(false);
                        jbtnMatchUpdate.setVisible(false);
                    }
                } else {
                    jbtnMatchDetails.setVisible(false);
                }
            }

            private boolean isFinished(Match selectedMatch) {
                Duration duration = Duration.between(LocalDateTime.now(), selectedMatch.getDateTime());
                if(duration.toHours() <= 3 && duration.isNegative()){
                    return true;
                }
                return false;
            }
        });
    }

    private void refreshTable() {
        TableModelAllMatches tmal = (TableModelAllMatches) jTableAllMatches.getModel();
        matches = k.getAllMatches(club);
        tmal.setMatches(matches);
        tmal.refreshDatas();
    }
}
